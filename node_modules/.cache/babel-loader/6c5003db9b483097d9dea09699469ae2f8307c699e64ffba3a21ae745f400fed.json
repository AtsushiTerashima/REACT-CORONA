{"ast":null,"code":"var _jsxFileName = \"/Users/curomo/Desktop/react-corona-tracker-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport countriesJson from './countries.json';\nimport TopPage from './pages/TopPage';\nimport WorldPage from './pages/WorldPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [country, setCountry] = useState('');\n  const [countryData, setCountryData] = useState({\n    data: \"\",\n    newConfirmed: \"\",\n    totalConfirmed: \"\",\n    newRecovered: \"\",\n    totalRecovered: \"\"\n  });\n  const getCountryData = () => {\n    fetch(`https://monotein-books.vercel.app/api/corona-tracker/country/${country}`).then(res => res.json()).then(data => {\n      setCountryData({\n        date: data[data.length - 1].Date,\n        newConfirmed: data[data.length - 1].Confirmed - data[data.length - 2].Confirmed,\n        totalConfirmed: data[data.length - 1].Confirmed,\n        newRecovered: data[data.length - 1].Recovered - data[data.length - 2].Recovered,\n        totalRecovered: data[data.length - 1].Recovered\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TopPage, {\n          countriesJson: countriesJson,\n          setCountry: setCountry,\n          getCountryData: getCountryData,\n          countryData: countryData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/world\",\n        element: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"\\u30EF\\u30FC\\u30EB\\u30C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"oFi4Lb9Tp1fUM5MqI+zVwcE+caQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","Route","Routes","BrowserRouter","countriesJson","TopPage","WorldPage","App","country","setCountry","countryData","setCountryData","data","newConfirmed","totalConfirmed","newRecovered","totalRecovered","getCountryData","fetch","then","res","json","date","length","Date","Confirmed","Recovered"],"sources":["/Users/curomo/Desktop/react-corona-tracker-app/src/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport countriesJson from './countries.json';\nimport TopPage from './pages/TopPage';\nimport WorldPage from'./pages/WorldPage';\nimport './App.css';\n\n\nfunction App() {\n  const [country, setCountry] = useState('');\n\n  const [countryData, setCountryData] = useState({\n    data: \"\",\n    newConfirmed: \"\",\n    totalConfirmed: \"\",\n    newRecovered: \"\",\n    totalRecovered: \"\",\n  });\n\n    const getCountryData = () => {\n        fetch(`https://monotein-books.vercel.app/api/corona-tracker/country/${country}`)\n        .then(res => res.json())\n        .then(data => {\n            setCountryData({\n                date: data[data.length - 1].Date,\n                newConfirmed: data[data.length - 1].Confirmed - data[data.length - 2].Confirmed,\n                totalConfirmed: data[data.length - 1].Confirmed,\n                newRecovered: data[data.length - 1].Recovered - data[data.length - 2].Recovered,\n                totalRecovered: data[data.length - 1].Recovered,\n            });\n        })\n    }\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={\n          <TopPage countriesJson={countriesJson} setCountry={setCountry} getCountryData={getCountryData} countryData={countryData}/>\n        } />\n        <Route path=\"/world\" element={<p>ワールド</p>}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,OAAO;AAChC,SAASC,KAAK,EAAEC,MAAM,EAAEC,aAAa,QAAQ,kBAAkB;AAC/D,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,SAAS,MAAK,mBAAmB;AACxC,OAAO,WAAW;AAAC;AAGnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC;IAC7CY,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEA,MAAMC,cAAc,GAAG,MAAM;IACzBC,KAAK,CAAE,gEAA+DV,OAAQ,EAAC,CAAC,CAC/EW,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACP,IAAI,IAAI;MACVD,cAAc,CAAC;QACXW,IAAI,EAAEV,IAAI,CAACA,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC,CAACC,IAAI;QAChCX,YAAY,EAAED,IAAI,CAACA,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC,CAACE,SAAS,GAAGb,IAAI,CAACA,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC,CAACE,SAAS;QAC/EX,cAAc,EAAEF,IAAI,CAACA,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC,CAACE,SAAS;QAC/CV,YAAY,EAAEH,IAAI,CAACA,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC,CAACG,SAAS,GAAGd,IAAI,CAACA,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC,CAACG,SAAS;QAC/EV,cAAc,EAAEJ,IAAI,CAACA,IAAI,CAACW,MAAM,GAAG,CAAC,CAAC,CAACG;MAC1C,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EACH,oBACE,QAAC,aAAa;IAAA,uBACZ,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eACrB,QAAC,OAAO;UAAC,aAAa,EAAEtB,aAAc;UAAC,UAAU,EAAEK,UAAW;UAAC,cAAc,EAAEQ,cAAe;UAAC,WAAW,EAAEP;QAAY;UAAA;UAAA;UAAA;QAAA;MACzH;QAAA;QAAA;QAAA;MAAA,QAAG,eACJ,QAAC,KAAK;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,eAAE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAY;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EACrC;IAAA;IAAA;IAAA;EAAA,QACK;AAEpB;AAAC,GAlCQH,GAAG;AAAA,KAAHA,GAAG;AAoCZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}