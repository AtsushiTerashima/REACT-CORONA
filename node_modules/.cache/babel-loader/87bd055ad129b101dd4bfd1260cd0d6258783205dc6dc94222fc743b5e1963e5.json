{"ast":null,"code":"var _jsxFileName = \"/Users/curomo/Desktop/react-corona-tracker-app/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport countriesJson from './countries.json';\nimport TopPage from './pages/TopPage';\nimport WorldPage from './pages/WorldPage';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [country, setCountry] = useState('');\n  const [countryData, setCountryData] = useState({\n    data: \"\",\n    newConfirmed: \"\",\n    totalConfirmed: \"\",\n    newRecovered: \"\",\n    totalRecovered: \"\"\n  });\n  const [allCountriesData, setAllCountriesData] = useState([]);\n  const getCountryData = () => {\n    fetch(`https://monotein-books.vercel.app/api/corona-tracker/country/${country}`).then(res => res.json()).then(data => {\n      setCountryData({\n        date: data[data.length - 1].Date,\n        newConfirmed: data[data.length - 1].Confirmed - data[data.length - 2].Confirmed,\n        totalConfirmed: data[data.length - 1].Confirmed,\n        newRecovered: data[data.length - 1].Recovered - data[data.length - 2].Recovered,\n        totalRecovered: data[data.length - 1].Recovered\n      });\n    });\n  };\n  useEffect(() => {\n    fetch(\"https://monotein-books.vercel.app/api/corona-tracker/summary\").then(res => res.json()).then(data => setAllCountriesData(data.Countries));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(BrowserRouter, {\n    children: /*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(TopPage, {\n          countriesJson: countriesJson,\n          setCountry: setCountry,\n          getCountryData: getCountryData,\n          countryData: countryData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/world\",\n        element: /*#__PURE__*/_jsxDEV(WorldPage, {\n          allCountriesData: allCountriesData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"qCNFRKPANLKOilITX1P/ZDlJzC4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","Route","Routes","BrowserRouter","countriesJson","TopPage","WorldPage","App","country","setCountry","countryData","setCountryData","data","newConfirmed","totalConfirmed","newRecovered","totalRecovered","allCountriesData","setAllCountriesData","getCountryData","fetch","then","res","json","date","length","Date","Confirmed","Recovered","Countries"],"sources":["/Users/curomo/Desktop/react-corona-tracker-app/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport { Route, Routes, BrowserRouter } from 'react-router-dom';\nimport countriesJson from './countries.json';\nimport TopPage from './pages/TopPage';\nimport WorldPage from'./pages/WorldPage';\nimport './App.css';\n\n\nfunction App() {\n  const [country, setCountry] = useState('');\n\n  const [countryData, setCountryData] = useState({\n    data: \"\",\n    newConfirmed: \"\",\n    totalConfirmed: \"\",\n    newRecovered: \"\",\n    totalRecovered: \"\",\n  });\n\n  const [allCountriesData, setAllCountriesData] = useState([]);\n\n  const getCountryData = () => {\n      fetch(`https://monotein-books.vercel.app/api/corona-tracker/country/${country}`)\n      .then(res => res.json())\n      .then(data => {\n          setCountryData({\n              date: data[data.length - 1].Date,\n              newConfirmed: data[data.length - 1].Confirmed - data[data.length - 2].Confirmed,\n              totalConfirmed: data[data.length - 1].Confirmed,\n              newRecovered: data[data.length - 1].Recovered - data[data.length - 2].Recovered,\n              totalRecovered: data[data.length - 1].Recovered,\n          });\n      })\n  }\n\n  useEffect(() => {\n      fetch(\"https://monotein-books.vercel.app/api/corona-tracker/summary\")\n      .then(res => res.json())\n      .then(data => setAllCountriesData(data.Countries))\n  },[]);\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={\n          <TopPage countriesJson={countriesJson} setCountry={setCountry} getCountryData={getCountryData} countryData={countryData}/>\n        } />\n        <Route path=\"/world\" element={<WorldPage allCountriesData={allCountriesData} />}/>\n      </Routes>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,KAAK,EAAEC,MAAM,EAAEC,aAAa,QAAQ,kBAAkB;AAC/D,OAAOC,aAAa,MAAM,kBAAkB;AAC5C,OAAOC,OAAO,MAAM,iBAAiB;AACrC,OAAOC,SAAS,MAAK,mBAAmB;AACxC,OAAO,WAAW;AAAC;AAGnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAM,CAACW,WAAW,EAAEC,cAAc,CAAC,GAAGZ,QAAQ,CAAC;IAC7Ca,IAAI,EAAE,EAAE;IACRC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE,EAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,cAAc,EAAE;EAClB,CAAC,CAAC;EAEF,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EAE5D,MAAMoB,cAAc,GAAG,MAAM;IACzBC,KAAK,CAAE,gEAA+DZ,OAAQ,EAAC,CAAC,CAC/Ea,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACT,IAAI,IAAI;MACVD,cAAc,CAAC;QACXa,IAAI,EAAEZ,IAAI,CAACA,IAAI,CAACa,MAAM,GAAG,CAAC,CAAC,CAACC,IAAI;QAChCb,YAAY,EAAED,IAAI,CAACA,IAAI,CAACa,MAAM,GAAG,CAAC,CAAC,CAACE,SAAS,GAAGf,IAAI,CAACA,IAAI,CAACa,MAAM,GAAG,CAAC,CAAC,CAACE,SAAS;QAC/Eb,cAAc,EAAEF,IAAI,CAACA,IAAI,CAACa,MAAM,GAAG,CAAC,CAAC,CAACE,SAAS;QAC/CZ,YAAY,EAAEH,IAAI,CAACA,IAAI,CAACa,MAAM,GAAG,CAAC,CAAC,CAACG,SAAS,GAAGhB,IAAI,CAACA,IAAI,CAACa,MAAM,GAAG,CAAC,CAAC,CAACG,SAAS;QAC/EZ,cAAc,EAAEJ,IAAI,CAACA,IAAI,CAACa,MAAM,GAAG,CAAC,CAAC,CAACG;MAC1C,CAAC,CAAC;IACN,CAAC,CAAC;EACN,CAAC;EAED5B,SAAS,CAAC,MAAM;IACZoB,KAAK,CAAC,8DAA8D,CAAC,CACpEC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACT,IAAI,IAAIM,mBAAmB,CAACN,IAAI,CAACiB,SAAS,CAAC,CAAC;EACtD,CAAC,EAAC,EAAE,CAAC;EAEL,oBACE,QAAC,aAAa;IAAA,uBACZ,QAAC,MAAM;MAAA,wBACL,QAAC,KAAK;QAAC,IAAI,EAAC,GAAG;QAAC,OAAO,eACrB,QAAC,OAAO;UAAC,aAAa,EAAEzB,aAAc;UAAC,UAAU,EAAEK,UAAW;UAAC,cAAc,EAAEU,cAAe;UAAC,WAAW,EAAET;QAAY;UAAA;UAAA;UAAA;QAAA;MACzH;QAAA;QAAA;QAAA;MAAA,QAAG,eACJ,QAAC,KAAK;QAAC,IAAI,EAAC,QAAQ;QAAC,OAAO,eAAE,QAAC,SAAS;UAAC,gBAAgB,EAAEO;QAAiB;UAAA;UAAA;UAAA;QAAA;MAAI;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA;EAC3E;IAAA;IAAA;IAAA;EAAA,QACK;AAEpB;AAAC,GA3CQV,GAAG;AAAA,KAAHA,GAAG;AA6CZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}